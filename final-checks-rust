#!/bin/sh
set -e
./test-rust
echo " -- exhaustive build --"
cd rust
rustc gen-exhaustive-build.rs
./gen-exhaustive-build > exhaustive-build.sh
. ./exhaustive-build.sh
cd ..
echo " -- doing final fmt/clippy : calculator --"
cd examples/rust/calculator
cargo fmt
cargo clippy
cd ../../..
echo " -- doing final fmt/clippy/MSRV check: lib --"
cd rust

# Ok, so, conveniently, the version jump here straddles the line between syn v1 and syn v2.
# This makes it pretty easy to check what's going on.
# Basically, Serde 1.0.156 is the last syn v1 version of Serde.[1]
# This expects syn ^1.0.104 and proc-macro2 ^1.0.46 (via syn).
# I've chosen the quote/syn versions based on staring at MSRVs and guesswork.
# It seems to hold.
# Now, downgrades have to be in a "top-down" order.
# Otherwise Cargo gets mad.
# The good news is, if it is top-down, Cargo is careful to automatically downgrade dependencies.
# But some downgrades must be done to unlock others.
# Downgrading serde downgrades serde_derive and syn.
# But not quote! So it must be manually downgraded.
# proc-macro2 then must be downgraded in turn.
# That brings the complete MSRV down to 1.54.0, ready for the build test.
# Actual testing was attempted...
# ...and promptly halted once DefaultHasher errors showed up. Yikes.

# [1] https://crates.io/crates/serde_derive/1.0.156/dependencies
#     https://crates.io/crates/serde_derive/1.0.157/dependencies

cargo update serde --precise 1.0.156
cargo update quote --precise 1.0.30
cargo update proc-macro2 --precise 1.0.65
cargo +1.54.0-x86_64-unknown-linux-gnu build --all-features
cargo fmt
cargo clippy
cargo semver-checks
